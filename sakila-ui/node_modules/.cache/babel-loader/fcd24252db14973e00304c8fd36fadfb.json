{"remainingRequest":"/Users/darrylthompson/devWS/gadgets/gadget-client/node_modules/babel-loader/lib/index.js!/Users/darrylthompson/devWS/gadgets/gadget-client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/darrylthompson/devWS/gadgets/gadget-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/darrylthompson/devWS/gadgets/gadget-client/src/pages/Customer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/darrylthompson/devWS/gadgets/gadget-client/src/pages/Customer.vue","mtime":1607276968296},{"path":"/Users/darrylthompson/devWS/gadgets/gadget-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/darrylthompson/devWS/gadgets/gadget-client/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/darrylthompson/devWS/gadgets/gadget-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/darrylthompson/devWS/gadgets/gadget-client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdDdXN0b21lcicsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGN1c3RvbWVyczogW10KICAgIH07CiAgfSwKICBtZXRob2RzOiB7fSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICB0aGlzLmF4aW9zLmdldCgiaHR0cDovL2xvY2FsaG9zdDozMDAwL2FwaS9iYWNrZW5kL2N1c3RvbWVycyIpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgIF90aGlzLmN1c3RvbWVycyA9IHJlc3BvbnNlLmRhdGEucmVzdWx0czsKICAgIH0pOwogIH0KfTs="},{"version":3,"sources":["Customer.vue"],"names":[],"mappings":";;;;;;;;;;AAWA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,SAAA,EAAA;AADA,KAAA;AAGA,GANA;AAOA,EAAA,OAAA,EAAA,EAPA;AAUA,EAAA,OAVA,qBAUA;AAAA;;AACA,SAAA,KAAA,CAAA,GAAA,CAAA,6CAAA,EACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,MAAA,KAAA,CAAA,SAAA,GAAA,QAAA,CAAA,IAAA,CAAA,OAAA;AACA,KAHA;AAIA;AAfA,CAAA","sourcesContent":["<template>\n  <q-page padding>\n    <!-- content -->\n    <h1>Customers</h1>\n  </q-page>\n</template>\n\n\n<style lang=\"css\"></style>\n\n<script>\nexport default {\n  name: 'Customer',\n  data() {\n    return {\n      customers: []\n    }\n  },\n  methods: {\n     \n  },\n  mounted() {\n    this.axios.get(\"http://localhost:3000/api/backend/customers\")\n    .then(response => {\n      this.customers = response.data.results\n    })\n  }\n}\n</script>"],"sourceRoot":"src/pages"}]}